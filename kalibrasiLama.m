% Auto-generated by cameraCalibrator app on 09-May-2019
%-------------------------------------------------------
startingFolder = pwd;
mydir  = pwd;
startingFolder   = strfind(mydir,'/timex');
	

% Get the name of the file that the user wants to use.
defaultFileName = fullfile('timex/', '*.*');
[baseFileName, folder] = uigetfile(defaultFileName, 'Select a file');
%-------------------------------------------------------

if baseFileName == 0
	% User clicked the Cancel button.
	return;
end
fullFileName = fullfile(folder, baseFileName);
img = imread(fullFileName);
% Define images to process
imageFileNames = {'/Users/itsupport/OneDrive/Documents/Kampus/PAPAN CATUR LAMA/a1.jpeg',...
    '/Users/itsupport/OneDrive/Documents/Kampus/PAPAN CATUR LAMA/a15.jpeg',...
    '/Users/itsupport/OneDrive/Documents/Kampus/PAPAN CATUR LAMA/a13.jpeg',...
    '/Users/itsupport/OneDrive/Documents/Kampus/PAPAN CATUR LAMA/a14.jpeg',...
    '/Users/itsupport/OneDrive/Documents/Kampus/PAPAN CATUR LAMA/a12.jpeg',...
    '/Users/itsupport/OneDrive/Documents/Kampus/PAPAN CATUR LAMA/a9.jpeg',...
    '/Users/itsupport/OneDrive/Documents/Kampus/PAPAN CATUR LAMA/a10.jpeg',...
    '/Users/itsupport/OneDrive/Documents/Kampus/PAPAN CATUR LAMA/a11.jpeg',...
    '/Users/itsupport/OneDrive/Documents/Kampus/PAPAN CATUR LAMA/a8.jpeg',...
    '/Users/itsupport/OneDrive/Documents/Kampus/PAPAN CATUR LAMA/a7.jpeg',...
    '/Users/itsupport/OneDrive/Documents/Kampus/PAPAN CATUR LAMA/a6.jpeg',...
    '/Users/itsupport/OneDrive/Documents/Kampus/PAPAN CATUR LAMA/a4.jpeg',...
    '/Users/itsupport/OneDrive/Documents/Kampus/PAPAN CATUR LAMA/a5.jpeg',...
    '/Users/itsupport/OneDrive/Documents/Kampus/PAPAN CATUR LAMA/a2.jpeg',...
    '/Users/itsupport/OneDrive/Documents/Kampus/PAPAN CATUR LAMA/a3.jpeg',...
    };

% Detect checkerboards in images
[imagePoints, boardSize, imagesUsed] = detectCheckerboardPoints(imageFileNames);
imageFileNames = imageFileNames(imagesUsed);

% Read the first image to obtain image size
originalImage = imread(imageFileNames{1});
[mrows, ncols, ~] = size(originalImage);

% Generate world coordinates of the corners of the squares
squareSize = 25;  % in units of 'millimeters'
worldPoints = generateCheckerboardPoints(boardSize, squareSize);

% Calibrate the camera
[cameraParams, imagesUsed, estimationErrors] = estimateCameraParameters(imagePoints, worldPoints, ...
    'EstimateSkew', true, 'EstimateTangentialDistortion', true, ...
    'NumRadialDistortionCoefficients', 2, 'WorldUnits', 'millimeters', ...
    'InitialIntrinsicMatrix', [], 'InitialRadialDistortion', [], ...
    'ImageSize', [mrows, ncols]);

% View reprojection errors
h1=figure; showReprojectionErrors(cameraParams);

% Visualize pattern locations
h2=figure; showExtrinsics(cameraParams, 'CameraCentric');

% Display parameter estimation errors
displayErrors(estimationErrors, cameraParams);

% For example, you can use the calibration data to remove effects of lens distortion.
undistortedImage = undistortImage(originalImage, cameraParams);
JJ = undistortImage(img,cameraParams);
imwrite(JJ,'ASDSADASDSA.jpg','jpg','Comment','My JPEG file')
% See additional examples of how to use the calibration data.  At the prompt type:
% showdemo('MeasuringPlanarObjectsExample')
% showdemo('StructureFromMotionExample')
